;; table.scm --

(foreign-library
 (name "cephes")
 (version
  (major	0)
  (minor	1)
  (patch	0))
 (constants
  )
 (type-aliases
  )
 (functions

  (char*      cephes_version_string		(void))
  (signed-int cephes_version_interface_current	(void))
  (signed-int cephes_version_interface_revision	(void))
  (signed-int cephes_version_interface_age	(void))

;;; ------------------------------------------------------------------

  (double chbevl (double x double* array double n))
  (int    drand  (double* a))
  (double polevl (double x double* coef int N))
  (double p1evl  (double x double* coef int N))
  (double powi   (double x int nn))
  (double sindg  (double x))
  (double tandg  (double x))
  (double cotdg  (double x))

;;; ------------------------------------------------------------------

  (int    airy   (double x double* ai double* aip double* bi double* bip))
  (double hyp2f1 (double a double b double c double x))
  (double hyperg (double a double b double x))
  (double i0     (double x))
  (double i0e    (double x))
  (double i1     (double x))
  (double i1e    (double x))
  (double iv     (double v double x))
  (double jv     (double n double x))
  (double k0     (double x))
  (double k0e    (double x))
  (double k1     (double x))
  (double k1e    (double x))
  (double kn     (int nn double x))
  (double psi    (double x))
  (double struve (double v double x))

;;; ------------------------------------------------------------------

  (double bdtr   (int k int n double p))
  (double bdtrc  (int k int n double p))
  (double bdtri  (int k int n double y))
  (double btdtr  (double a double b double x))
  (double chdtrc (double df double x))
  (double chdtr  (double df double x))
  (double chdtri (double df double y))
  (double expx2  (double x int sign))
  (double fdtr   (int ia int ib double x))
  (double fdtrc  (int ia int ib double x))
  (double fdtri  (int ia int ib double y))
  (double gamma  (double x))
  (double lgam   (double x))
  (double gdtr   (double a double b double x))
  (double gdtrc  (double a double b double x))
  (double igam   (double a double x))
  (double igamc  (double a double x))
  (double igami  (double a double y0))
  (double incbet (double aa double bb double xx))
  (double incbi  (double aa double bb double yy0))
  (double kolmogorov (double y))
  (double nbdtr  (int k int n double p))
  (double nbdtrc (int k int n double p))
  (double nbdtri (int k int n double p))
  (double ndtr   (double a))
  (double erfc   (double a))
  (double erf    (double x))
  (double ndtri  (double y0))
  (double pdtr   (int k double m))
  (double pdtrc  (int k double m))
  (double pdtri  (int k double y))
  (double stdtr  (int k double t))
  (double stdtri (int k double p))

;;; ------------------------------------------------------------------

  (double ellie  (double phi double m))
  (double ellik  (double phi double m))
  (double ellpe  (double x))
  (int    ellpj  (double u double m double* sn double* cn double* dn double* ph))
  (double ellpk  (double x))

;;; ------------------------------------------------------------------

  (void   eclear (unsigned-short* x))
  (void   emov   (unsigned-short* a unsigned-short* b))
  (void   eabs   (unsigned-short* x))
  (void   eneg   (unsigned-short* x))
  (int    eisneg (unsigned-short* x))
  (int    eisinf (unsigned-short* x))
  (int    eisnan (unsigned-short* x))
  (void   einfin (unsigned-short* x))
  (void   emovi  (unsigned-short* a unsigned-short* b))
  (void   emovo  (unsigned-short* a unsigned-short* b))
  (void   ecleaz (unsigned-short* xi))
  (void   ecleazs (unsigned-short* xi))
  (void   emovz  (unsigned-short* a unsigned-short* b))
  (int    eiisnan (unsigned-short* x))
  (int    ecmpm  (unsigned-short* a unsigned-short* b))
  (void   eshdn1 (unsigned-short* x))
  (void   eshup1 (unsigned-short* x))
  (void   eshdn8 (unsigned-short* x))
  (void   eshup8 (unsigned-short* x))
  (void   eshup6 (unsigned-short* x))
  (void   eshdn6 (unsigned-short* x))
  (void   eaddm  (unsigned-short* x unsigned-short* y))
  (void   esubm  (unsigned-short* x unsigned-short* y))
  (int    edivm  (unsigned-short* den unsigned-short* num))
  (int    emulm  (unsigned-short* a unsigned-short* b))
  (void   emdnorm (unsigned-short s int lost int subflg long exp int rcntrl))
  (void   esub   (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   eadd   (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   eadd1  (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   ediv   (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   emul   (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   e53toe (unsigned-short* pe unsigned-short* y))
  (void   e64toe (unsigned-short* pe unsigned-short* y))
  (void   e113toe (unsigned-short* pe unsigned-short* y))
  (void   e24toe (unsigned-short* pe unsigned-short* y))
  (void   etoe113 (unsigned-short* x unsigned-short* e))
  (void   etoe64 (unsigned-short* x unsigned-short* e))
  (void   etoe53 (unsigned-short* x unsigned-short* e))
  (void   etoe24 (unsigned-short* x unsigned-short* e))
  (int    ecmp   (unsigned-short* a unsigned-short* b))
  (void   eround (unsigned-short* x unsigned-short* y))
  (void   ltoe   (long* lp unsigned-short* y))
  (void   ultoe  (unsigned-long* lp unsigned-short* y))
  (void   eifrac (unsigned-short* x long* i unsigned-short* frac))
  (void   euifrac (unsigned-short* x unsigned-long* i unsigned-short* frac))
  (int    eshift (unsigned-short* x int sc))
  (int    enormlz (unsigned-short* x))
  (void   e24toasc (unsigned-short* x char* string int ndigs))
  (void   e53toasc (unsigned-short* x char* string int ndigs))
  (void   e64toasc (unsigned-short* x char* string int ndigs))
  (void   e113toasc (unsigned-short* x char* string int ndigs))
  (void   etoasc (unsigned-short* x char* string int ndigs))
  (void   asctoe24 (char* s unsigned-short* y))
  (void   asctoe53 (char* s unsigned-short* y))
  (void   asctoe64 (char* s unsigned-short* y))
  (void   asctoe113 (char* s unsigned-short* y))
  (void   asctoe (char* s unsigned-short* y))
  (void   asctoeg (char* ss unsigned-short* y int oprec))
  (void   efloor (unsigned-short* x unsigned-short* y))
  (void   efrexp (unsigned-short* x long* exp unsigned-short* s))
  (void   eldexp (unsigned-short* x long pwr2 unsigned-short* y))
  (void   eremain (unsigned-short* a unsigned-short* b unsigned-short* c))
  (void   eiremain (unsigned-short* den unsigned-short* num))
  (void   enan (unsigned-short* nan int size))
  (void   esqrt (short* x short* y))
  (void   eexp   (unsigned-short* x unsigned-short* y))
  (void   epow   (unsigned-short* x unsigned-short* y unsigned-short* z))
  (void   epowi  (unsigned-short* x unsigned-short* y unsigned-short* z))
  (void   etodec (unsigned-short* x unsigned-short* d))
  (void   dectoe (unsigned-short* d unsigned-short* e))

;;; ------------------------------------------------------------------

  (double beta (double a double b))
  (double dawsn (double xx))
  (double ei (double x))
  (double expn (int n double x))
  (double fac (int i))
  (int    fresnl (double xxa double* ssa double* cca))
  (double plancki (double w double T))
  (double polylog (int n double x))
  (void   revers (double* y double* x int n))
  (double rgamma (double x))
  (int    shichi (double x double* si double* ci))
  (int    sici (double x double* si double* ci))
  (double simpsn (double* f double delta))
  (double spence (double x))
  (double zeta (double x double q))
  (double zetac (double x))

;;; ------------------------------------------------------------------

  (void   polini (int maxdeg))
  (void   polprt (double* a int na int d))
  (void   polclr (double* a int n))
  (void   polmov (double* a double* b int na))
  (void   polmul (double* a double* b double* c int na int nb))
  (void   poladd (double* a double* b double* c int na int nb))
  (void   polsub (double* a double* b double* c int na int nb))
  (int    poldiv (double* a double* b double* c int na int nb))
  (void   polsbt (double* a double* b double* c int na int nb))
  (double poleva (double* a int na double x))
  (void   polatn (double* num double* den double* ans int nn))
  (void   polsqt (double* pol double* ans int nn))
  (void   polsin (double* x double* y int nn))
  (void   polcos (double* x double* y int nn))
  (int    polrt  (double* xcof double* cof int m double-complex* root))

  #| end of functions |#)
 #| end of library |# )

;;; end of file
